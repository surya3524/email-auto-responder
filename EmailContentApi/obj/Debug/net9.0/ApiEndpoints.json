[
  {
    "ContainingType": "EmailContentApi.Controllers.EmailContentController",
    "Method": "GetEmailContents",
    "RelativePath": "api/EmailContent",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[EmailContentApi.DTOs.EmailContentResponseDto, EmailContentApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "EmailContentApi.Controllers.EmailContentController",
    "Method": "CreateEmailContent",
    "RelativePath": "api/EmailContent",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "EmailContentApi.DTOs.CreateEmailContentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EmailContentApi.DTOs.EmailContentResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "EmailContentApi.Controllers.EmailContentController",
    "Method": "GetEmailContent",
    "RelativePath": "api/EmailContent/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EmailContentApi.DTOs.EmailContentResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "EmailContentApi.Controllers.EmailContentController",
    "Method": "UpdateEmailContent",
    "RelativePath": "api/EmailContent/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "EmailContentApi.DTOs.CreateEmailContentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "EmailContentApi.Controllers.EmailContentController",
    "Method": "DeleteEmailContent",
    "RelativePath": "api/EmailContent/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "EmailContentApi.Controllers.EmailContentController",
    "Method": "GetEmailContentCount",
    "RelativePath": "api/EmailContent/count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EmailContentApi.Controllers.EmailContentController",
    "Method": "SeedData",
    "RelativePath": "api/EmailContent/seed",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "EmailContentApi.Controllers.EnronEmailController",
    "Method": "AnalyzeEnronEmails",
    "RelativePath": "api/EnronEmail/analyze-enron-emails",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.EnronEmailController",
    "Method": "GetEnronEmails",
    "RelativePath": "api/EnronEmail/get-enron-emails",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.EnronEmailController",
    "Method": "Insert1000EnronEmails",
    "RelativePath": "api/EnronEmail/insert-1000-enron-emails",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.EnronEmailController",
    "Method": "InsertEnronEmails",
    "RelativePath": "api/EnronEmail/insert-enron-emails",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.OpenAIController",
    "Method": "GenerateEmbedding",
    "RelativePath": "api/OpenAI/embed",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EmailContentApi.Controllers.EmbeddingRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.OpenAIController",
    "Method": "GenerateEmbeddingsForAllEmails",
    "RelativePath": "api/OpenAI/embed-all-emails",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.OpenAIController",
    "Method": "GenerateEmbeddingForEmail",
    "RelativePath": "api/OpenAI/embed-email/{id}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.OpenAIController",
    "Method": "TestOpenAI",
    "RelativePath": "api/OpenAI/test",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.PineconeSDKController",
    "Method": "AugmentedSearch",
    "RelativePath": "api/PineconeSDK/augmented-search",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EmailContentApi.Controllers.AugmentedSearchRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.PineconeSDKController",
    "Method": "ChunkSizeAnalysis",
    "RelativePath": "api/PineconeSDK/chunk-size-analysis",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.PineconeSDKController",
    "Method": "CreateServerlessIndex",
    "RelativePath": "api/PineconeSDK/create-serverless",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EmailContentApi.Controllers.ServerlessIndexRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.PineconeSDKController",
    "Method": "EmailRelationshipAnalysis",
    "RelativePath": "api/PineconeSDK/email-relationship-analysis",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.PineconeSDKController",
    "Method": "SemanticSearch",
    "RelativePath": "api/PineconeSDK/semantic-search",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "queryText",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.PineconeSDKController",
    "Method": "TestAugmentedSearch",
    "RelativePath": "api/PineconeSDK/test-augmented-search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.PineconeSDKController",
    "Method": "TokenAnalysis",
    "RelativePath": "api/PineconeSDK/token-analysis",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.PineconeSDKController",
    "Method": "UpsertEmailData",
    "RelativePath": "api/PineconeSDK/upsert-email-data",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.PineconeSDKController",
    "Method": "UpsertEmailDataConfigurable",
    "RelativePath": "api/PineconeSDK/upsert-email-data-configurable",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EmailContentApi.Controllers.UpsertEmailDataRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmailContentApi.Controllers.PineconeSDKController",
    "Method": "UpsertRecords",
    "RelativePath": "api/PineconeSDK/upsert-records",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "records",
        "Type": "System.Collections.Generic.List\u00601[[EmailContentApi.Controllers.UpsertRecordRequest, EmailContentApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]