{
  "openapi": "3.0.4",
  "info": {
    "title": "Email Content API",
    "description": "A .NET 8 Web API for managing email content with AWS database integration",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    },
    "version": "v1"
  },
  "paths": {
    "/api/EmailContent": {
      "get": {
        "tags": [
          "EmailContent"
        ],
        "summary": "Retrieves all email contents from the database",
        "responses": {
          "200": {
            "description": "Returns the list of email contents",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailContentResponseDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailContentResponseDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailContentResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "EmailContent"
        ],
        "summary": "Creates a new email content entry",
        "requestBody": {
          "description": "The email content data to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmailContentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmailContentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmailContentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created email content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmailContentResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailContentResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailContentResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "If the content is null or empty",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error"
          }
        }
      }
    },
    "/api/EmailContent/{id}": {
      "get": {
        "tags": [
          "EmailContent"
        ],
        "summary": "Retrieves a specific email content by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email content to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested email content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmailContentResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailContentResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailContentResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "If the email content with the specified ID was not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmailContent"
        ],
        "summary": "Updates an existing email content entry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email content to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated email content data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmailContentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmailContentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmailContentDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "If the email content was successfully updated"
          },
          "400": {
            "description": "If the content is null or empty",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "If the email content with the specified ID was not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmailContent"
        ],
        "summary": "Deletes an email content entry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email content to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "If the email content was successfully deleted"
          },
          "404": {
            "description": "If the email content with the specified ID was not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmailContent/seed": {
      "post": {
        "tags": [
          "EmailContent"
        ],
        "summary": "Manually triggers data seeding (for testing purposes)",
        "responses": {
          "200": {
            "description": "If seeding was successful"
          },
          "500": {
            "description": "If there was an error during seeding"
          }
        }
      }
    },
    "/api/EmailContent/count": {
      "get": {
        "tags": [
          "EmailContent"
        ],
        "summary": "Gets the count of email contents in the database",
        "responses": {
          "200": {
            "description": "Returns the count"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateEmailContentDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmailContentResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    }
  }
}